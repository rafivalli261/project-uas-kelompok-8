package admin;

/**
 *
 * @author Kelompok 8
 */

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import koneksi.Koneksi;

public class MahasiswaAdmin extends javax.swing.JFrame implements AdminInterface {

    /**
     * Creates new form MahasiswaAdmin
     */
    DefaultTableModel model;
    private String filename;

    public MahasiswaAdmin() {
        initComponents();
        inisiasi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nama = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelMahasiswa = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        kelas = new javax.swing.JTextField();
        angkatan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NIM = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        sideDashboard = new javax.swing.JButton();
        sideDivisi1 = new javax.swing.JButton();
        sideMahasiswa1 = new javax.swing.JButton();
        sideOrganisasi1 = new javax.swing.JButton();
        sideAdmin1 = new javax.swing.JButton();
        sideLogout1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        upload = new javax.swing.JButton();
        foto = new javax.swing.JLabel();
        idDivisi = new javax.swing.JComboBox<>();
        idOrganisasi = new javax.swing.JComboBox<>();
        ketuaDivisi = new javax.swing.JComboBox<>();
        ketuaOrganisasi = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(247, 236, 209));

        jLabel9.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel9.setText("Ketua Divisi (1/0)");

        jLabel10.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel10.setText("Ketua Organisasi (1/0)");

        jLabel11.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel11.setText("MAHASISWA");

        btnTambah.setBackground(new java.awt.Color(172, 125, 136));
        btnTambah.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(172, 125, 136));
        btnEdit.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(172, 125, 136));
        btnHapus.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(172, 125, 136));
        btnReset.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tabelMahasiswa.setAutoCreateRowSorter(true);
        tabelMahasiswa.setBackground(new java.awt.Color(172, 125, 136));
        tabelMahasiswa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelMahasiswa.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        tabelMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelMahasiswa.setGridColor(new java.awt.Color(0, 0, 0));
        tabelMahasiswa.setShowHorizontalLines(true);
        tabelMahasiswa.setShowVerticalLines(true);
        tabelMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelMahasiswa);

        jLabel6.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel6.setText("Kelas");

        jLabel2.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel2.setText("NIM");

        NIM.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel3.setText("Id Divisi");

        jLabel4.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel4.setText("Id Organisasi");

        jLabel5.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel5.setText("Nama");

        jLabel7.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel7.setText("Angkatan");

        jLabel8.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel8.setText("Foto");

        jPanel2.setBackground(new java.awt.Color(222, 182, 171));

        sideDashboard.setBackground(new java.awt.Color(172, 125, 136));
        sideDashboard.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        sideDashboard.setForeground(new java.awt.Color(17, 17, 17));
        sideDashboard.setText("Dashboard");
        sideDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideDashboardActionPerformed(evt);
            }
        });

        sideDivisi1.setBackground(new java.awt.Color(172, 125, 136));
        sideDivisi1.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        sideDivisi1.setForeground(new java.awt.Color(17, 17, 17));
        sideDivisi1.setText("Divisi");
        sideDivisi1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideDivisi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideDivisi1ActionPerformed(evt);
            }
        });

        sideMahasiswa1.setBackground(new java.awt.Color(172, 125, 136));
        sideMahasiswa1.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        sideMahasiswa1.setForeground(new java.awt.Color(17, 17, 17));
        sideMahasiswa1.setText("Mahasiswa");
        sideMahasiswa1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideMahasiswa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideMahasiswa1ActionPerformed(evt);
            }
        });

        sideOrganisasi1.setBackground(new java.awt.Color(172, 125, 136));
        sideOrganisasi1.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        sideOrganisasi1.setForeground(new java.awt.Color(17, 17, 17));
        sideOrganisasi1.setText("Organisasi");
        sideOrganisasi1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideOrganisasi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideOrganisasi1ActionPerformed(evt);
            }
        });

        sideAdmin1.setBackground(new java.awt.Color(172, 125, 136));
        sideAdmin1.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        sideAdmin1.setForeground(new java.awt.Color(17, 17, 17));
        sideAdmin1.setText("Admin");
        sideAdmin1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideAdmin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideAdmin1ActionPerformed(evt);
            }
        });

        sideLogout1.setBackground(new java.awt.Color(172, 125, 136));
        sideLogout1.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        sideLogout1.setForeground(new java.awt.Color(17, 17, 17));
        sideLogout1.setText("Logout");
        sideLogout1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sideLogout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideLogout1ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Mahasiswa.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sideMahasiswa1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sideDivisi1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(sideOrganisasi1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                .addComponent(sideLogout1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sideAdmin1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(sideDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sideDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sideDivisi1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sideMahasiswa1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sideOrganisasi1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sideAdmin1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sideLogout1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(599, Short.MAX_VALUE))
        );

        upload.setBackground(new java.awt.Color(172, 125, 136));
        upload.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        upload.setText("Upload");
        upload.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });

        foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(172, 125, 136)));

        idDivisi.setBackground(new java.awt.Color(172, 125, 136));
        idDivisi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7" }));
        idDivisi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        idOrganisasi.setBackground(new java.awt.Color(172, 125, 136));
        idOrganisasi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4" }));
        idOrganisasi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        ketuaDivisi.setBackground(new java.awt.Color(172, 125, 136));
        ketuaDivisi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        ketuaDivisi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        ketuaOrganisasi.setBackground(new java.awt.Color(172, 125, 136));
        ketuaOrganisasi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        ketuaOrganisasi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnTambah)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnEdit)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnHapus)
                                        .addGap(465, 465, 465)
                                        .addComponent(btnReset))
                                    .addComponent(ketuaDivisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ketuaOrganisasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(63, 63, 63)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(upload)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(kelas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(angkatan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(NIM, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idDivisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idOrganisasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(443, 443, 443)
                        .addComponent(jLabel11)))
                .addContainerGap(517, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idDivisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(angkatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(idOrganisasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(upload, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8))
                    .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(ketuaDivisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(ketuaOrganisasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah)
                            .addComponent(btnEdit)
                            .addComponent(btnHapus)
                            .addComponent(btnReset))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1405, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 306, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        tambah();
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        edit();
    }//GEN-LAST:event_btnEditActionPerformed

    private void tabelMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMahasiswaMouseClicked
        pilihBaris();
    }//GEN-LAST:event_tabelMahasiswaMouseClicked

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed

        hapus();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void sideDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideDashboardActionPerformed
        new DashboardAdmin().show();
        this.dispose();
    }//GEN-LAST:event_sideDashboardActionPerformed

    private void sideDivisi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideDivisi1ActionPerformed
        new DivisiAdmin().show();
        this.dispose();
    }//GEN-LAST:event_sideDivisi1ActionPerformed

    private void sideMahasiswa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideMahasiswa1ActionPerformed
        new MahasiswaAdmin().show();
        this.dispose();
    }//GEN-LAST:event_sideMahasiswa1ActionPerformed

    private void sideOrganisasi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideOrganisasi1ActionPerformed
        new OrganisasiAdmin().show();
        this.dispose();
    }//GEN-LAST:event_sideOrganisasi1ActionPerformed

    private void sideAdmin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideAdmin1ActionPerformed
        new AdminAdmin().show();
        this.dispose();
    }//GEN-LAST:event_sideAdmin1ActionPerformed

    private void sideLogout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideLogout1ActionPerformed
        new formlogin().show();
        this.dispose();
    }//GEN-LAST:event_sideLogout1ActionPerformed

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
        // TODO add your handling code here:
        upload();
    }//GEN-LAST:event_uploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MahasiswaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MahasiswaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MahasiswaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MahasiswaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MahasiswaAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NIM;
    private javax.swing.JTextField angkatan;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel foto;
    private javax.swing.JComboBox<String> idDivisi;
    private javax.swing.JComboBox<String> idOrganisasi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField kelas;
    private javax.swing.JComboBox<String> ketuaDivisi;
    private javax.swing.JComboBox<String> ketuaOrganisasi;
    private javax.swing.JTextField nama;
    private javax.swing.JButton sideAdmin1;
    private javax.swing.JButton sideDashboard;
    private javax.swing.JButton sideDivisi1;
    private javax.swing.JButton sideLogout1;
    private javax.swing.JButton sideMahasiswa1;
    private javax.swing.JButton sideOrganisasi1;
    private javax.swing.JTable tabelMahasiswa;
    private javax.swing.JButton upload;
    // End of variables declaration//GEN-END:variables

    @Override
    public void reset() {
        NIM.setText("");
        idDivisi.setSelectedItem("");
        idOrganisasi.setSelectedItem("");
        nama.setText("");
        kelas.setText("");
        angkatan.setText("");
        foto.setIcon(null);
    }

    @Override
    public void tampilkan() {
        int row = tabelMahasiswa.getRowCount();
        for (int a = 0; a < row; a++) {
            model.removeRow(0);
        }
        // model.getDataVector().removeAllElements();
        // model.fireTableDataChanged(); // notifies the JTable that the model has changed
        try {
            Connection cn = Koneksi.getKoneksi();
            ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM mahasiswa ");
            while (rs.next()) {
                // pake string karena di db pake varchar
                Object data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), new ImageIcon("src/upload/" + rs.getString(7)), rs.getString(8), rs.getString(9)};
                model.addRow(data);
                 model.fireTableDataChanged(); // notifies the JTable that the model has changed
                tabelMahasiswa.revalidate();
            }
            tabelMahasiswa.setRowHeight(130);
            tabelMahasiswa.getColumnModel().getColumn(0).setPreferredWidth(20);
            tabelMahasiswa.getColumnModel().getColumn(1).setPreferredWidth(10);
            tabelMahasiswa.getColumnModel().getColumn(2).setPreferredWidth(30);
            tabelMahasiswa.getColumnModel().getColumn(3).setPreferredWidth(90);
            tabelMahasiswa.getColumnModel().getColumn(4).setPreferredWidth(10);
            tabelMahasiswa.getColumnModel().getColumn(5).setPreferredWidth(30);
            tabelMahasiswa.getColumnModel().getColumn(6).setPreferredWidth(90);
            tabelMahasiswa.getColumnModel().getColumn(7).setPreferredWidth(30);
            tabelMahasiswa.getColumnModel().getColumn(6).setPreferredWidth(40);
        } catch (SQLException ex) {
            Logger.getLogger(MahasiswaAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void edit() {
        try {
            if ((!idDivisi.getSelectedItem().equals("0") && !idOrganisasi.getSelectedItem().equals("0"))
                    || (!idDivisi.getSelectedItem().equals("0") && idOrganisasi.getSelectedItem().equals("0"))
                    || (idDivisi.getSelectedItem().equals("0") && !idOrganisasi.getSelectedItem().equals("0"))) {

                File fl = olahGambar(this.filename);

                Connection cn = Koneksi.getKoneksi();
//                cn.createStatement().executeUpdate("UPDATE mahasiswa SET idDivisi='" + idDivisi.getSelectedItem() + "', idOrganisasi'" + idOrganisasi.getSelectedItem() + "', nama='" + nama.getText() + "', kelas='" + kelas.getText() + "', angkatan='" + angkatan.getText() + "', foto='" + fl.toString() + "', ketuaDivisi='" + ketuaDivisi.getSelectedItem() + "',ketuaOrgnaisasi='" + ketuaOrganisasi.getSelectedItem() + "' WHERE NIM= '" + NIM.getText() + "'");
                cn.createStatement().executeUpdate("UPDATE mahasiswa SET idDivisi ='" + idDivisi.getSelectedItem() + "',idOrganisasi ='" + idOrganisasi.getSelectedItem() + "', nama ='" + nama.getText() + "', kelas ='" + kelas.getText() + "',foto ='" + fl.toString() + "'WHERE NIM = '" + NIM.getText() + "'");
                tampilkan();
                reset();

            } else {
                JOptionPane.showMessageDialog(rootPane, "Mahasiswa Bukan Termasuk Anggota Divisi maupun Organisasi");
                NIM.setText("");
                nama.setText("");
                kelas.setText("");
                angkatan.setText("");
                foto.setIcon(null);
                NIM.requestFocus();
            }

        } catch (SQLException | NullPointerException ex) {
//            JOptionPane.showMessageDialog(null, "Ada data yang belum diisi");
            JOptionPane.showMessageDialog(null, "Terdapat kesalahan dalam pengisian data / terdapat field kosong / tidak berubah", "Pesan Info", JOptionPane.INFORMATION_MESSAGE);
//            Logger.getLogger(MahasiswaAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void tambah() {
        try {
            if ((!idDivisi.getSelectedItem().equals("0") && !idOrganisasi.getSelectedItem().equals("0"))
                    || (!idDivisi.getSelectedItem().equals("0") && idOrganisasi.getSelectedItem().equals("0"))
                    || (idDivisi.getSelectedItem().equals("0") && !idOrganisasi.getSelectedItem().equals("0"))) {

                File fl = olahGambar(this.filename);

                Connection cn = Koneksi.getKoneksi();
                cn.createStatement().executeUpdate("INSERT INTO mahasiswa VALUES" + "('" + NIM.getText() + "'," + idDivisi.getSelectedItem() + "," + idOrganisasi.getSelectedItem() + ",'" + nama.getText() + "','" + kelas.getText() + "','" + angkatan.getText() + "','" + fl.toString() + "','" + ketuaDivisi.getSelectedItem() + "','" + ketuaOrganisasi.getSelectedItem() + "')");
                tampilkan();
                reset();

            } else {
                JOptionPane.showMessageDialog(rootPane, "Mahasiswa Bukan Termasuk Anggota Divisi maupun Organisasi");
                NIM.setText("");
                nama.setText("");
                kelas.setText("");
                angkatan.setText("");
                foto.setIcon(null);
                NIM.requestFocus();
            }

        } catch (SQLException | NullPointerException ex) {
//            JOptionPane.showMessageDialog(null, "Ada data yang belum diisi");
            JOptionPane.showMessageDialog(null, "Terdapat kesalahan dalam pengisian data / terdapat field kosong / tidak berubah", "Pesan Info", JOptionPane.INFORMATION_MESSAGE);
//            Logger.getLogger(MahasiswaAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void hapus() {
        int opsi = JOptionPane.showConfirmDialog(null, "Benarkah anda ingin menghapus data ini ?", "Penghapusan Data", JOptionPane.YES_NO_OPTION);
        if (opsi == JOptionPane.YES_OPTION) {
            try {
                Connection cn = Koneksi.getKoneksi();
                Statement stmn = cn.createStatement();
                ResultSet rs = stmn.executeQuery("SELECT * FROM mahasiswa");
                while (rs.next()) {
                    if (rs.getString("NIM").equals(NIM.getText())) {
                        new File("src/upload/" + rs.getString("foto")).delete();
                    }
                }
                cn.createStatement().executeUpdate("DELETE FROM mahasiswa WHERE NIM = '" + NIM.getText() + "'");
                tampilkan();
                reset();
            } catch (SQLException ex) {
                Logger.getLogger(MahasiswaAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            tampilkan();
        }
    }

    public void upload() {
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            ImageIcon icon = new ImageIcon(f.toString());
            Image img = icon.getImage().getScaledInstance(foto.getWidth(),
                    foto.getHeight(), Image.SCALE_DEFAULT);
            ImageIcon ic = new ImageIcon(img);
            foto.setIcon(ic);
            this.filename = f.getAbsolutePath();
        } catch (Exception e) {
            String pesan = "Data tidak jadi diedit!";
            JOptionPane.showMessageDialog(null, pesan, "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    @Override
    public void inisiasi() {
        this.sideMahasiswa1.requestFocusInWindow();
        this.setExtendedState(MAXIMIZED_BOTH);
        String[] judul = {"NIM", "id Divisi", "id Organisasi", "Nama", "Kelas", "Angkatan", "Foto", "Ketua Divisi", "Ketua Organisasi"};
        model = new DefaultTableModel(judul, 0) {
            @Override
            public Class getColumnClass(int column) {
                // variabel col bisa diganti dengan index kolom yang digunakan sebagai gambar
                int col = 6;
                return (column == col) ? Icon.class : super.getColumnClass(column);
            }
        };
        tabelMahasiswa.setModel(model);
        tampilkan();
    }

    public File olahGambar(String namaFile) {
        String newPath = "src/upload";
        File fileAwal = null, fileAkhir = null, fileSimpan = null;
        try {
            File directory = new File(newPath);
            if (!directory.exists()) {
                directory.mkdirs();
            }
            String ext = namaFile.substring(namaFile.lastIndexOf('.') + 1);
            fileAwal = new File(namaFile);
            fileAkhir = new File(NIM.getText() + '.' + ext);
            fileSimpan = new File(newPath + "/" + NIM.getText() + '.' + ext);
            if (fileSimpan.exists()) {
                fileSimpan.delete();
            }
            fileSimpan = new File(newPath + "/" + NIM.getText() + '.' + ext);
//            System.out.println(fileAkhir);
            // MahasiswaAdmin a = new MahasiswaAdmin();
//            System.out.println("File Path Awal : " + fileAwal.toPath());
//            System.out.println("File Path Akhir : " + fileAkhir.toPath());
            Files.copy(fileAwal.toPath(), fileSimpan.toPath());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Terdapat kesalahan dalam pengurusan berkas!", "Error Pengurusan berkas", JOptionPane.WARNING_MESSAGE);
        }
        return fileAkhir;
    }

    @Override
    public void pilihBaris() {
        int i = tabelMahasiswa.getSelectedRow();
        String line = null;
        if (i > -1 || line == null) {
            NIM.setText(model.getValueAt(i, 0).toString());
            idDivisi.setSelectedItem(model.getValueAt(i, 1).toString());
            idOrganisasi.setSelectedItem(model.getValueAt(i, 2).toString());
            nama.setText(model.getValueAt(i, 3).toString());
            kelas.setText(model.getValueAt(i, 4).toString());
            angkatan.setText(model.getValueAt(i, 5).toString());
            ImageIcon icon = new ImageIcon(model.getValueAt(i, 6).toString());
            Image img = icon.getImage().getScaledInstance(foto.getWidth(),
                    foto.getHeight(), Image.SCALE_DEFAULT);
            ImageIcon ic = new ImageIcon(img);
            foto.setIcon(ic);
            ketuaDivisi.setSelectedItem(model.getValueAt(i, 7).toString());
            ketuaOrganisasi.setSelectedItem(model.getValueAt(i, 8).toString());
        }
    }
}
